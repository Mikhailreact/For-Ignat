{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/HW1.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messageBlock","message1","ava","src","avatar","namePerson","name","message","time","AlternativeMessage","avatar2","name2","message2","time2","HW1","dialogues","SuperButton","red","restProps","error","finalClassName","default","children","Affair","affair","onClick","deleteAffairCallback","_id","btnX","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","someClass","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","placeholder","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","checkbox","switch","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f9314f13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBlock\":\"Message_messageBlock__dwGKJ\",\"message1\":\"Message_message1__1CCB9\",\"time\":\"Message_time__27p9S\",\"ava\":\"Message_ava__Le3H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBlock\":\"AlternativeMessage_messageBlock__vabmp\",\"message1\":\"AlternativeMessage_message1__5NVti\",\"time\":\"AlternativeMessage_time__13mXx\",\"ava\":\"AlternativeMessage_ava__3SVm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__cmw_D\",\"affair\":\"Affairs_affair__3VCj5\",\"btnX\":\"Affairs_btnX__22Xcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__Ek60L\",\"errorInput\":\"SuperInputText_errorInput__29D19\",\"error\":\"SuperInputText_error__1vQVc\",\"spanClassName\":\"SuperInputText_spanClassName__3ZNcR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3Fj6d\",\"spanClassName\":\"SuperCheckbox_spanClassName__SbF5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__lhCwb\",\"red\":\"SuperButton_red__hgOKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__1Skof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2x3ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues\":\"HW1_dialogues__2XqF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2cJQS\",\"error\":\"Greeting_error__3sbjp\"};","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\nexport type MessageType = {\r\n    avatar: any\r\n    name: string\r\n    message: string\r\n    time: string\r\n};\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={s.messageBlock}>\r\n            <div className={s.message1}>\r\n                <div><img className={s.ava} src={props.avatar}/></div>\r\n                <div className={s.namePerson}>{props.name}</div>\r\n                <div className={s.message}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./AlternativeMessage.module.css\";\r\n\r\n\r\nexport type AlternativeMessage = {\r\n    avatar2: any\r\n    name2: string\r\n    message2: string\r\n    time2: string\r\n};\r\n\r\n\r\nfunction AlternativeMessage(props: AlternativeMessage) {\r\n    return (\r\n        <div className={s.messageBlock}>\r\n            <div className={s.message1}>\r\n                <div><img className={s.ava} src={props.avatar2}/></div>\r\n                <div className={s.namePerson}>{props.name2}</div>\r\n                <div className={s.message}>{props.message2}</div>\r\n                <div className={s.time}>{props.time2}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlternativeMessage;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\nimport s from './HW1.module.css'\r\n\r\nfunction HW1() {\r\n\r\n    let avatar = \"https://avatarfiles.alphacoders.com/221/thumb-221419.jpg\";\r\n    let name = \"Mikhail\";\r\n    let message = \"npm delete нажимал?\";\r\n    let time = \"22:00\";\r\n\r\n    let avatar2 = \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\";\r\n    let name2 = \"Kristina\";\r\n    let message2 = \"Я нажала npm install!\";\r\n    let time2 = \"22:10\";\r\n\r\n\r\n    return (\r\n        <div className={s.dialogues}>\r\n            homeworks 1\r\n            {/*\r\n            should work (должно работать)*/}\r\n            <Message\r\n                avatar={avatar}\r\n                name={name}\r\n                message={message}\r\n                time={time}\r\n            />\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage\r\n                avatar2={avatar2}\r\n                name2={name2}\r\n                message2={message2}\r\n                time2={time2}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    error?: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        error,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n    //const finalClassName = `${error ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            children={red}\r\n\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType// need to fix any\r\n    deleteAffairCallback: (_id: number) => void// need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            {props.affair.name}\r\n            <SuperButton onClick={deleteCallback} className={s.btnX}>x</SuperButton>\r\n            {/*<button onClick={deleteCallback}>X</button>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data:Array<AffairType>\r\n    setFilter: (setFilter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n            <SuperButton onClick={setAll}>All</SuperButton>\r\n            <SuperButton onClick={setHigh}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n            {/*<button onClick={setAll}>All</button>*/}\r\n            {/*<button onClick={setHigh}>High</button>*/}\r\n            {/*<button onClick={setMiddle}>Middle</button>*/}\r\n            {/*<button onClick={setLow}>Low</button>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"  // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}; // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType>  = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType)  => {\r\n    if(filter === 'high') return affairs.filter(a => a.priority === 'high')\r\n    if(filter === 'low') return affairs.filter(a => a.priority === 'low')\r\n    if(filter === 'middle') return affairs.filter(a => a.priority === 'middle')\r\n    return affairs\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return  affairs.filter(a => a._id !== _id) ;\r\n\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div className={s.someClass}>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n   /* const finalInputClassName = ` ${s.errorInput} ${s.superInput ? s.superInput : \"\"}`;*/ // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers}\r\n) => {\r\n    const inputClass = error ? s.error : \"\";\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText value={name}\r\n                            onChange={setNameCallback}\r\n                            className={inputClass}\r\n                            error={error}\r\n                            placeholder={\"Давай пиши чего-нибуть\"}\r\n\r\n            />\r\n            {/*<input value={name} onChange={setNameCallback} className={inputClass}/>*/}\r\n\r\n            <SuperButton onClick={addUser} >Add</SuperButton>\r\n           {/* <button onClick={addUser}>add</button>*/}\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n        setError(\"\")\r\n    };\r\n    const addUser = () => {\r\n\r\n        if(name !== \"\"){\r\n            addUserCallback(name)\r\n            alert(`Hello  ${name} !` )\r\n            setName(\"\")\r\n        } else {\r\n            setError(\"ERROR\")\r\n        }\r\n\r\n    };\r\n\r\n    const totalUsers = users.length; \r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let newUser = {_id: v1(), name: name }\r\n        setUsers( [...users, newUser]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n\r\n        <label className={s.switch}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n        // благодаря label нажатие на спан передастся в инпут\r\n\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.blue}\r\n                    spanClassName={\"spanClassName\"}\r\n                    // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    error={error}\r\n\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks: Grinchenko.</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}